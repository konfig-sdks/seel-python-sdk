# coding: utf-8

"""
    Seel API

    Seel API

    The version of the OpenAPI document: 1.3.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from seel_python_sdk import schemas  # noqa: F401


class OrderRefund(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            refund_id = schemas.StrSchema
            
            
            class created_ts(
                schemas.DateTimeBase,
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    format = 'date-time'
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, datetime, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'created_ts':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            refund_amount = schemas.Float64Schema
            refund_reason = schemas.StrSchema
        
            @staticmethod
            def line_items() -> typing.Type['OrderRefundLineItems']:
                return OrderRefundLineItems
            __annotations__ = {
                "refund_id": refund_id,
                "created_ts": created_ts,
                "refund_amount": refund_amount,
                "refund_reason": refund_reason,
                "line_items": line_items,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refund_id"]) -> MetaOapg.properties.refund_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_ts"]) -> MetaOapg.properties.created_ts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refund_amount"]) -> MetaOapg.properties.refund_amount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refund_reason"]) -> MetaOapg.properties.refund_reason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["line_items"]) -> 'OrderRefundLineItems': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["refund_id", "created_ts", "refund_amount", "refund_reason", "line_items", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refund_id"]) -> typing.Union[MetaOapg.properties.refund_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_ts"]) -> typing.Union[MetaOapg.properties.created_ts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refund_amount"]) -> typing.Union[MetaOapg.properties.refund_amount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refund_reason"]) -> typing.Union[MetaOapg.properties.refund_reason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["line_items"]) -> typing.Union['OrderRefundLineItems', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["refund_id", "created_ts", "refund_amount", "refund_reason", "line_items", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        refund_id: typing.Union[MetaOapg.properties.refund_id, str, schemas.Unset] = schemas.unset,
        created_ts: typing.Union[MetaOapg.properties.created_ts, None, str, datetime, schemas.Unset] = schemas.unset,
        refund_amount: typing.Union[MetaOapg.properties.refund_amount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        refund_reason: typing.Union[MetaOapg.properties.refund_reason, str, schemas.Unset] = schemas.unset,
        line_items: typing.Union['OrderRefundLineItems', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OrderRefund':
        return super().__new__(
            cls,
            *args,
            refund_id=refund_id,
            created_ts=created_ts,
            refund_amount=refund_amount,
            refund_reason=refund_reason,
            line_items=line_items,
            _configuration=_configuration,
            **kwargs,
        )

from seel_python_sdk.model.order_refund_line_items import OrderRefundLineItems
