# coding: utf-8

"""
    Seel API

    Seel API

    The version of the OpenAPI document: 1.3.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from seel_python_sdk import schemas  # noqa: F401


class MerchantUpdateMerchantDetailsRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            shop_id = schemas.StrSchema
            admin_domain = schemas.StrSchema
            shop_domain = schemas.StrSchema
            shop_platform = schemas.StrSchema
            shop_currency = schemas.StrSchema
            shop_name = schemas.StrSchema
            contact_name = schemas.StrSchema
            contact_email = schemas.StrSchema
            contact_phone_number = schemas.StrSchema
        
            @staticmethod
            def seel_services() -> typing.Type['MerchantUpdateMerchantDetailsRequestSeelServices']:
                return MerchantUpdateMerchantDetailsRequestSeelServices
            __annotations__ = {
                "shop_id": shop_id,
                "admin_domain": admin_domain,
                "shop_domain": shop_domain,
                "shop_platform": shop_platform,
                "shop_currency": shop_currency,
                "shop_name": shop_name,
                "contact_name": contact_name,
                "contact_email": contact_email,
                "contact_phone_number": contact_phone_number,
                "seel_services": seel_services,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shop_id"]) -> MetaOapg.properties.shop_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["admin_domain"]) -> MetaOapg.properties.admin_domain: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shop_domain"]) -> MetaOapg.properties.shop_domain: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shop_platform"]) -> MetaOapg.properties.shop_platform: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shop_currency"]) -> MetaOapg.properties.shop_currency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shop_name"]) -> MetaOapg.properties.shop_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contact_name"]) -> MetaOapg.properties.contact_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contact_email"]) -> MetaOapg.properties.contact_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contact_phone_number"]) -> MetaOapg.properties.contact_phone_number: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["seel_services"]) -> 'MerchantUpdateMerchantDetailsRequestSeelServices': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["shop_id", "admin_domain", "shop_domain", "shop_platform", "shop_currency", "shop_name", "contact_name", "contact_email", "contact_phone_number", "seel_services", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shop_id"]) -> typing.Union[MetaOapg.properties.shop_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["admin_domain"]) -> typing.Union[MetaOapg.properties.admin_domain, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shop_domain"]) -> typing.Union[MetaOapg.properties.shop_domain, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shop_platform"]) -> typing.Union[MetaOapg.properties.shop_platform, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shop_currency"]) -> typing.Union[MetaOapg.properties.shop_currency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shop_name"]) -> typing.Union[MetaOapg.properties.shop_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contact_name"]) -> typing.Union[MetaOapg.properties.contact_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contact_email"]) -> typing.Union[MetaOapg.properties.contact_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contact_phone_number"]) -> typing.Union[MetaOapg.properties.contact_phone_number, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["seel_services"]) -> typing.Union['MerchantUpdateMerchantDetailsRequestSeelServices', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["shop_id", "admin_domain", "shop_domain", "shop_platform", "shop_currency", "shop_name", "contact_name", "contact_email", "contact_phone_number", "seel_services", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        shop_id: typing.Union[MetaOapg.properties.shop_id, str, schemas.Unset] = schemas.unset,
        admin_domain: typing.Union[MetaOapg.properties.admin_domain, str, schemas.Unset] = schemas.unset,
        shop_domain: typing.Union[MetaOapg.properties.shop_domain, str, schemas.Unset] = schemas.unset,
        shop_platform: typing.Union[MetaOapg.properties.shop_platform, str, schemas.Unset] = schemas.unset,
        shop_currency: typing.Union[MetaOapg.properties.shop_currency, str, schemas.Unset] = schemas.unset,
        shop_name: typing.Union[MetaOapg.properties.shop_name, str, schemas.Unset] = schemas.unset,
        contact_name: typing.Union[MetaOapg.properties.contact_name, str, schemas.Unset] = schemas.unset,
        contact_email: typing.Union[MetaOapg.properties.contact_email, str, schemas.Unset] = schemas.unset,
        contact_phone_number: typing.Union[MetaOapg.properties.contact_phone_number, str, schemas.Unset] = schemas.unset,
        seel_services: typing.Union['MerchantUpdateMerchantDetailsRequestSeelServices', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MerchantUpdateMerchantDetailsRequest':
        return super().__new__(
            cls,
            *args,
            shop_id=shop_id,
            admin_domain=admin_domain,
            shop_domain=shop_domain,
            shop_platform=shop_platform,
            shop_currency=shop_currency,
            shop_name=shop_name,
            contact_name=contact_name,
            contact_email=contact_email,
            contact_phone_number=contact_phone_number,
            seel_services=seel_services,
            _configuration=_configuration,
            **kwargs,
        )

from seel_python_sdk.model.merchant_update_merchant_details_request_seel_services import MerchantUpdateMerchantDetailsRequestSeelServices
